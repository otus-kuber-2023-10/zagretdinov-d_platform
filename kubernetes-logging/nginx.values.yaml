controller:
  replicaCount: 3

  tolerations:
    - key: node-role
      operator: Equal
      value: infra
      effect: NoSchedule

  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - ingress-nginx
            topologyKey: kubernetes.io/hostname

  nodeSelector: &nodeSelector
    yandex.cloud/node-group-id: catok10gi08fqpm32dcc

  config:
    log-format-escape-json: "true"
    log-format-upstream: '{"time_local": "$time_local", "proxy_protocol_addr": "$proxy_protocol_addr",
        "remote_addr": "$remote_addr", "proxy_add_x_forwarded_for": "$proxy_add_x_forwarded_for", 
        "remote_user": "$remote_user", "request" : "$request", "body_bytes_sent": "$body_bytes_sent", 
        "http_referer":  "$http_referer", "http_user_agent": "$http_user_agent", 
        "proxy_upstream_name": "$proxy_upstream_name", "upstream_addr": "$upstream_addr",  
        "upstream_response_length": "$upstream_response_length", "upstream_response_time": "$upstream_response_time", 
        "upstream_status": "$upstream_status"}'

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: "nginx-ingress"
      namespaceSelector: {}
      scrapeInterval: 30s